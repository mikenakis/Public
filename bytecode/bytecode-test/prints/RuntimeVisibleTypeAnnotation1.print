 version = 60.0, accessFlags = [public, interface, abstract, annotation], thisClass = mikenakis.bytecode.test.model.RuntimeVisibleTypeAnnotation1, superClass = java.lang.Object
 ├─ interfaces (1 entries)
 │   └─ Class name = "java/lang/annotation/Annotation"
 ├─ extra constants (0 entries)
 ├─ fields (0 entries)
 ├─ methods (13 entries)
 │   ├─ method accessFlags = [public, abstract], name = annotationParameter, descriptor = java.lang.SuppressWarnings()
 │   │   └─ attributes (1 entries)
 │   │       └─ AnnotationDefault 
 │   │           └─ Annotation value =  type = java.lang.SuppressWarnings, 1 parameters
 │   ├─ method accessFlags = [public, abstract], name = arrayParameter, descriptor = java.lang.String[]()
 │   │   └─ attributes (1 entries)
 │   │       └─ AnnotationDefault 
 │   │           └─ Array value =  3 elements
 │   │               ├─ element "a"
 │   │               ├─ element "b"
 │   │               └─ element "c"
 │   ├─ method accessFlags = [public, abstract], name = booleanParameter, descriptor = boolean()
 │   │   └─ attributes (1 entries)
 │   │       └─ AnnotationDefault 
 │   │           └─ Boolean value =  1
 │   ├─ method accessFlags = [public, abstract], name = byteParameter, descriptor = byte()
 │   │   └─ attributes (1 entries)
 │   │       └─ AnnotationDefault 
 │   │           └─ Byte value =  1
 │   ├─ method accessFlags = [public, abstract], name = charParameter, descriptor = char()
 │   │   └─ attributes (1 entries)
 │   │       └─ AnnotationDefault 
 │   │           └─ Character value =  99
 │   ├─ method accessFlags = [public, abstract], name = doubleParameter, descriptor = double()
 │   │   └─ attributes (1 entries)
 │   │       └─ AnnotationDefault 
 │   │           └─ Double value =  0.5
 │   ├─ method accessFlags = [public, abstract], name = floatParameter, descriptor = float()
 │   │   └─ attributes (1 entries)
 │   │       └─ AnnotationDefault 
 │   │           └─ Float value =  0.25f
 │   ├─ method accessFlags = [public, abstract], name = intParameter, descriptor = int()
 │   │   └─ attributes (1 entries)
 │   │       └─ AnnotationDefault 
 │   │           └─ Integer value =  2
 │   ├─ method accessFlags = [public, abstract], name = longParameter, descriptor = long()
 │   │   └─ attributes (1 entries)
 │   │       └─ AnnotationDefault 
 │   │           └─ Long value =  3L
 │   ├─ method accessFlags = [public, abstract], name = shortParameter, descriptor = short()
 │   │   └─ attributes (1 entries)
 │   │       └─ AnnotationDefault 
 │   │           └─ Short value =  4
 │   ├─ method accessFlags = [public, abstract], name = stringParameter, descriptor = java.lang.String()
 │   │   └─ attributes (1 entries)
 │   │       └─ AnnotationDefault 
 │   │           └─ String value =  "x"
 │   ├─ method accessFlags = [public, abstract], name = classParameter, descriptor = java.lang.Class()
 │   │   └─ attributes (2 entries)
 │   │       ├─ AnnotationDefault 
 │   │       │   └─ Class value =  "Ljava/lang/Object;"
 │   │       └─ Signature ()Ljava/lang/Class<*>;
 │   └─ method accessFlags = [public, abstract], name = value, descriptor = int()
 │       └─ attributes (1 entries)
 │           └─ AnnotationDefault 
 │               └─ Integer value =  5
 └─ attributes (2 entries)
     ├─ SourceFile value = "RuntimeVisibleTypeAnnotation1.java"
     └─ RuntimeVisibleAnnotations (2 entries)
         ├─ annotation  type = java.lang.annotation.Target, 1 parameters
         │   └─ parameter name = "value"
         │       └─ Array value =  4 elements
         │           ├─ element type = java.lang.annotation.ElementType, value = PACKAGE
         │           ├─ element type = java.lang.annotation.ElementType, value = TYPE_PARAMETER
         │           ├─ element type = java.lang.annotation.ElementType, value = TYPE_USE
         │           └─ element type = java.lang.annotation.ElementType, value = MODULE
         └─ annotation  type = java.lang.annotation.Retention, 1 parameters
             └─ parameter name = "value"
                 └─ Enum value =  type = java.lang.annotation.RetentionPolicy, value = RUNTIME
