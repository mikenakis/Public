ByteCodeType version = 60.0, accessFlags = [public, super], thisClass = mikenakis.bytecode.test.model.Class9WithCode, superClass = java.lang.Object
 ├─ interfaces: 0 entries
 ├─ extraConstants: 0 entries
 ├─ fields: 3 entries
 │   ├─ [0] ByteCodeField accessFlags = [private, final], name = "str", descriptor = java.lang.String
 │   │   └─ attributes: 0 entries
 │   ├─ [1] ByteCodeField accessFlags = [private], name = "pos", descriptor = int
 │   │   └─ attributes: 0 entries
 │   └─ [2] ByteCodeField accessFlags = [private], name = "ch", descriptor = int
 │       └─ attributes: 0 entries
 ├─ methods: 8 entries
 │   ├─ [0] ByteCodeMethod accessFlags = [public, static], name = "eval", descriptor = double( java.lang.String )
 │   │   └─ attributes: 2 entries
 │   │       ├─ [0] CodeAttribute maxStack = 3, maxLocals = 2
 │   │       │   ├─ instructions: 8 entries
 │   │       │   │   ├─ [0] L9: // Class9WithCode parser = new Class9WithCode( str );
 │   │       │   │   ├─ [1]      NEW mikenakis.bytecode.test.model.Class9WithCode
 │   │       │   │   ├─ [2]      DUP
 │   │       │   │   ├─ [3]      ALOAD_0
 │   │       │   │   ├─ [4]      INVOKESPECIAL type = mikenakis.bytecode.test.model.Class9WithCode, name = <init>, descriptor = void( java.lang.String )
 │   │       │   │   ├─ [5]      ASTORE_1
 │   │       │   │   ├─ [6] L10: // return parser.parse();
 │   │       │   │   ├─ [7]      ALOAD_1
 │   │       │   │   ├─ [8]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parse, descriptor = double()
 │   │       │   │   └─ [9]      DRETURN
 │   │       │   ├─ exceptionInfos: 0 entries
 │   │       │   └─ attributes: 2 entries
 │   │       │       ├─ [0] LineNumberTableAttribute
 │   │       │       │   └─ entrys: 2 entries
 │   │       │       │       ├─ [0] LineNumberTableEntry lineNumber = 9, start = L9
 │   │       │       │       └─ [1] LineNumberTableEntry lineNumber = 10, start = L10
 │   │       │       └─ [1] LocalVariableTableAttribute
 │   │       │           └─ entrys: 2 entries
 │   │       │               ├─ [0] LocalVariableTableEntry index = 0, start = L9, end = @end, name = str, descriptor = java.lang.String
 │   │       │               └─ [1] LocalVariableTableEntry index = 1, start = L10, end = @end, name = parser, descriptor = mikenakis.bytecode.test.model.Class9WithCode
 │   │       └─ [1] MethodParametersAttribute
 │   │           └─ parameters: 1 entries
 │   │               └─ [0] MethodParameter accessFlags = [], name = "str"
 │   ├─ [1] ByteCodeMethod accessFlags = [public], name = "<init>", descriptor = void( java.lang.String )
 │   │   └─ attributes: 2 entries
 │   │       ├─ [0] CodeAttribute maxStack = 2, maxLocals = 2
 │   │       │   ├─ instructions: 9 entries
 │   │       │   │   ├─ [0] L18: // {
 │   │       │   │   ├─ [1]      ALOAD_0
 │   │       │   │   ├─ [2]      INVOKESPECIAL type = java.lang.Object, name = <init>, descriptor = void()
 │   │       │   │   ├─ [3] L14: // private int pos = -1;
 │   │       │   │   ├─ [4]      ALOAD_0
 │   │       │   │   ├─ [5]      ICONST_M1
 │   │       │   │   ├─ [6]      PUTFIELD int mikenakis.bytecode.test.model.Class9WithCode.pos
 │   │       │   │   ├─ [7] L19: // this.str = str;
 │   │       │   │   ├─ [8]      ALOAD_0
 │   │       │   │   ├─ [9]      ALOAD_1
 │   │       │   │   ├─ [10]      PUTFIELD java.lang.String mikenakis.bytecode.test.model.Class9WithCode.str
 │   │       │   │   ├─ [11] L20: // }
 │   │       │   │   └─ [12]      RETURN
 │   │       │   ├─ exceptionInfos: 0 entries
 │   │       │   └─ attributes: 2 entries
 │   │       │       ├─ [0] LineNumberTableAttribute
 │   │       │       │   └─ entrys: 4 entries
 │   │       │       │       ├─ [0] LineNumberTableEntry lineNumber = 18, start = L18
 │   │       │       │       ├─ [1] LineNumberTableEntry lineNumber = 14, start = L14
 │   │       │       │       ├─ [2] LineNumberTableEntry lineNumber = 19, start = L19
 │   │       │       │       └─ [3] LineNumberTableEntry lineNumber = 20, start = L20
 │   │       │       └─ [1] LocalVariableTableAttribute
 │   │       │           └─ entrys: 2 entries
 │   │       │               ├─ [0] LocalVariableTableEntry index = 0, start = L18, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class9WithCode
 │   │       │               └─ [1] LocalVariableTableEntry index = 1, start = L18, end = @end, name = str, descriptor = java.lang.String
 │   │       └─ [1] MethodParametersAttribute
 │   │           └─ parameters: 1 entries
 │   │               └─ [0] MethodParameter accessFlags = [], name = "str"
 │   ├─ [2] ByteCodeMethod accessFlags = [private], name = "nextChar", descriptor = void()
 │   │   └─ attributes: 1 entries
 │   │       └─ [0] CodeAttribute maxStack = 4, maxLocals = 1
 │   │           ├─ instructions: 21 entries
 │   │           │   ├─ [0] L24: // ch = (++pos < str.length()) ? str.charAt( pos ) : -1;
 │   │           │   ├─ [1]      ALOAD_0
 │   │           │   ├─ [2]      ALOAD_0
 │   │           │   ├─ [3]      DUP
 │   │           │   ├─ [4]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.pos
 │   │           │   ├─ [5]      ICONST_1
 │   │           │   ├─ [6]      IADD
 │   │           │   ├─ [7]      DUP_X1
 │   │           │   ├─ [8]      PUTFIELD int mikenakis.bytecode.test.model.Class9WithCode.pos
 │   │           │   ├─ [9]      ALOAD_0
 │   │           │   ├─ [10]      GETFIELD java.lang.String mikenakis.bytecode.test.model.Class9WithCode.str
 │   │           │   ├─ [11]      INVOKEVIRTUAL type = java.lang.String, name = length, descriptor = int()
 │   │           │   ├─ [12]      IF_ICMPGE T1
 │   │           │   ├─ [13]      ALOAD_0
 │   │           │   ├─ [14]      GETFIELD java.lang.String mikenakis.bytecode.test.model.Class9WithCode.str
 │   │           │   ├─ [15]      ALOAD_0
 │   │           │   ├─ [16]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.pos
 │   │           │   ├─ [17]      INVOKEVIRTUAL type = java.lang.String, name = charAt, descriptor = char( int )
 │   │           │   ├─ [18]      GOTO T2
 │   │           │   ├─ [19] T1:
 │   │           │   ├─ [20]      ICONST_M1
 │   │           │   ├─ [21] T2:
 │   │           │   ├─ [22]      PUTFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │   │           │   ├─ [23] L25: // }
 │   │           │   └─ [24]      RETURN
 │   │           ├─ exceptionInfos: 0 entries
 │   │           └─ attributes: 3 entries
 │   │               ├─ [0] LineNumberTableAttribute
 │   │               │   └─ entrys: 2 entries
 │   │               │       ├─ [0] LineNumberTableEntry lineNumber = 24, start = L24
 │   │               │       └─ [1] LineNumberTableEntry lineNumber = 25, start = L25
 │   │               ├─ [1] LocalVariableTableAttribute
 │   │               │   └─ entrys: 1 entries
 │   │               │       └─ [0] LocalVariableTableEntry index = 0, start = L24, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class9WithCode
 │   │               └─ [2] StackMapTableAttribute
 │   │                   └─ frames: 2 entries
 │   │                       ├─ [0] SameLocals1StackItemFrame target = T1
 │   │                       │   └─ stackVerificationType: name = Object, type = mikenakis.bytecode.test.model.Class9WithCode
 │   │                       └─ [1] FullFrame target = T2
 │   │                           ├─ localVerificationTypes: 1 entries
 │   │                           │   └─ [0] name = Object, type = mikenakis.bytecode.test.model.Class9WithCode
 │   │                           └─ stackVerificationTypes: 2 entries
 │   │                               ├─ [0] name = Object, type = mikenakis.bytecode.test.model.Class9WithCode
 │   │                               └─ [1] Integer
 │   ├─ [3] ByteCodeMethod accessFlags = [private], name = "eat", descriptor = boolean( int )
 │   │   └─ attributes: 2 entries
 │   │       ├─ [0] CodeAttribute maxStack = 2, maxLocals = 2
 │   │       │   ├─ instructions: 17 entries
 │   │       │   │   ├─ [0] L30: // while( ch == ' ' )
 │   │       │   │   ├─ [1]      ALOAD_0
 │   │       │   │   ├─ [2]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │   │       │   │   ├─ [3]      BIPUSH 32
 │   │       │   │   ├─ [4]      IF_ICMPNE L32
 │   │       │   │   ├─ [5] L31: // nextChar();
 │   │       │   │   ├─ [6]      ALOAD_0
 │   │       │   │   ├─ [7]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = nextChar, descriptor = void()
 │   │       │   │   ├─ [8]      GOTO L30
 │   │       │   │   ├─ [9] L32: // if( ch == charToEat )
 │   │       │   │   ├─ [10]      ALOAD_0
 │   │       │   │   ├─ [11]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │   │       │   │   ├─ [12]      ILOAD_1
 │   │       │   │   ├─ [13]      IF_ICMPNE L37
 │   │       │   │   ├─ [14] L34: // nextChar();
 │   │       │   │   ├─ [15]      ALOAD_0
 │   │       │   │   ├─ [16]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = nextChar, descriptor = void()
 │   │       │   │   ├─ [17] L35: // return true;
 │   │       │   │   ├─ [18]      ICONST_1
 │   │       │   │   ├─ [19]      IRETURN
 │   │       │   │   ├─ [20] L37: // return false;
 │   │       │   │   ├─ [21]      ICONST_0
 │   │       │   │   └─ [22]      IRETURN
 │   │       │   ├─ exceptionInfos: 0 entries
 │   │       │   └─ attributes: 3 entries
 │   │       │       ├─ [0] LineNumberTableAttribute
 │   │       │       │   └─ entrys: 6 entries
 │   │       │       │       ├─ [0] LineNumberTableEntry lineNumber = 30, start = L30
 │   │       │       │       ├─ [1] LineNumberTableEntry lineNumber = 31, start = L31
 │   │       │       │       ├─ [2] LineNumberTableEntry lineNumber = 32, start = L32
 │   │       │       │       ├─ [3] LineNumberTableEntry lineNumber = 34, start = L34
 │   │       │       │       ├─ [4] LineNumberTableEntry lineNumber = 35, start = L35
 │   │       │       │       └─ [5] LineNumberTableEntry lineNumber = 37, start = L37
 │   │       │       ├─ [1] LocalVariableTableAttribute
 │   │       │       │   └─ entrys: 2 entries
 │   │       │       │       ├─ [0] LocalVariableTableEntry index = 0, start = L30, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class9WithCode
 │   │       │       │       └─ [1] LocalVariableTableEntry index = 1, start = L30, end = @end, name = charToEat, descriptor = int
 │   │       │       └─ [2] StackMapTableAttribute
 │   │       │           └─ frames: 3 entries
 │   │       │               ├─ [0] SameFrame target = L30
 │   │       │               ├─ [1] SameFrame target = L32
 │   │       │               └─ [2] SameFrame target = L37
 │   │       └─ [1] MethodParametersAttribute
 │   │           └─ parameters: 1 entries
 │   │               └─ [0] MethodParameter accessFlags = [], name = "charToEat"
 │   ├─ [4] ByteCodeMethod accessFlags = [public], name = "parse", descriptor = double()
 │   │   └─ attributes: 1 entries
 │   │       └─ [0] CodeAttribute maxStack = 3, maxLocals = 3
 │   │           ├─ instructions: 21 entries
 │   │           │   ├─ [0] L42: // nextChar();
 │   │           │   ├─ [1]      ALOAD_0
 │   │           │   ├─ [2]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = nextChar, descriptor = void()
 │   │           │   ├─ [3] L43: // double x = parseExpression();
 │   │           │   ├─ [4]      ALOAD_0
 │   │           │   ├─ [5]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parseExpression, descriptor = double()
 │   │           │   ├─ [6]      DSTORE_1
 │   │           │   ├─ [7] L44: // if( pos < str.length() )
 │   │           │   ├─ [8]      ALOAD_0
 │   │           │   ├─ [9]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.pos
 │   │           │   ├─ [10]      ALOAD_0
 │   │           │   ├─ [11]      GETFIELD java.lang.String mikenakis.bytecode.test.model.Class9WithCode.str
 │   │           │   ├─ [12]      INVOKEVIRTUAL type = java.lang.String, name = length, descriptor = int()
 │   │           │   ├─ [13]      IF_ICMPGE L46
 │   │           │   ├─ [14] L45: // throw new RuntimeException( "Unexpected: " + (char)ch );
 │   │           │   ├─ [15]      NEW java.lang.RuntimeException
 │   │           │   ├─ [16]      DUP
 │   │           │   ├─ [17]      ALOAD_0
 │   │           │   ├─ [18]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │   │           │   ├─ [19]      I2C
 │   │           │   ├─ [20]      INVOKEDYNAMIC bootstrapMethodIndex = 0, name = makeConcatWithConstants, descriptor = java.lang.String( char )
 │   │           │   ├─ [21]      INVOKESPECIAL type = java.lang.RuntimeException, name = <init>, descriptor = void( java.lang.String )
 │   │           │   ├─ [22]      ATHROW
 │   │           │   ├─ [23] L46: // return x;
 │   │           │   ├─ [24]      DLOAD_1
 │   │           │   └─ [25]      DRETURN
 │   │           ├─ exceptionInfos: 0 entries
 │   │           └─ attributes: 3 entries
 │   │               ├─ [0] LineNumberTableAttribute
 │   │               │   └─ entrys: 5 entries
 │   │               │       ├─ [0] LineNumberTableEntry lineNumber = 42, start = L42
 │   │               │       ├─ [1] LineNumberTableEntry lineNumber = 43, start = L43
 │   │               │       ├─ [2] LineNumberTableEntry lineNumber = 44, start = L44
 │   │               │       ├─ [3] LineNumberTableEntry lineNumber = 45, start = L45
 │   │               │       └─ [4] LineNumberTableEntry lineNumber = 46, start = L46
 │   │               ├─ [1] LocalVariableTableAttribute
 │   │               │   └─ entrys: 2 entries
 │   │               │       ├─ [0] LocalVariableTableEntry index = 0, start = L42, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class9WithCode
 │   │               │       └─ [1] LocalVariableTableEntry index = 1, start = L44, end = @end, name = x, descriptor = double
 │   │               └─ [2] StackMapTableAttribute
 │   │                   └─ frames: 1 entries
 │   │                       └─ [0] AppendFrame target = L46
 │   │                           └─ localVerificationTypes: 1 entries
 │   │                               └─ [0] Double
 │   ├─ [5] ByteCodeMethod accessFlags = [private], name = "parseExpression", descriptor = double()
 │   │   └─ attributes: 1 entries
 │   │       └─ [0] CodeAttribute maxStack = 4, maxLocals = 3
 │   │           ├─ instructions: 25 entries
 │   │           │   ├─ [0] L57: // double x = parseTerm();
 │   │           │   ├─ [1]      ALOAD_0
 │   │           │   ├─ [2]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parseTerm, descriptor = double()
 │   │           │   ├─ [3]      DSTORE_1
 │   │           │   ├─ [4] L60: // if( eat( '+' ) )
 │   │           │   ├─ [5]      ALOAD_0
 │   │           │   ├─ [6]      BIPUSH 43
 │   │           │   ├─ [7]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = eat, descriptor = boolean( int )
 │   │           │   ├─ [8]      IFEQ L62
 │   │           │   ├─ [9] L61: // x += parseTerm(); // addition
 │   │           │   ├─ [10]      DLOAD_1
 │   │           │   ├─ [11]      ALOAD_0
 │   │           │   ├─ [12]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parseTerm, descriptor = double()
 │   │           │   ├─ [13]      DADD
 │   │           │   ├─ [14]      DSTORE_1
 │   │           │   ├─ [15]      GOTO L60
 │   │           │   ├─ [16] L62: // else if( eat( '-' ) )
 │   │           │   ├─ [17]      ALOAD_0
 │   │           │   ├─ [18]      BIPUSH 45
 │   │           │   ├─ [19]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = eat, descriptor = boolean( int )
 │   │           │   ├─ [20]      IFEQ L65
 │   │           │   ├─ [21] L63: // x -= parseTerm(); // subtraction
 │   │           │   ├─ [22]      DLOAD_1
 │   │           │   ├─ [23]      ALOAD_0
 │   │           │   ├─ [24]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parseTerm, descriptor = double()
 │   │           │   ├─ [25]      DSUB
 │   │           │   ├─ [26]      DSTORE_1
 │   │           │   ├─ [27]      GOTO L60
 │   │           │   ├─ [28] L65: // return x;
 │   │           │   ├─ [29]      DLOAD_1
 │   │           │   └─ [30]      DRETURN
 │   │           ├─ exceptionInfos: 0 entries
 │   │           └─ attributes: 3 entries
 │   │               ├─ [0] LineNumberTableAttribute
 │   │               │   └─ entrys: 6 entries
 │   │               │       ├─ [0] LineNumberTableEntry lineNumber = 57, start = L57
 │   │               │       ├─ [1] LineNumberTableEntry lineNumber = 60, start = L60
 │   │               │       ├─ [2] LineNumberTableEntry lineNumber = 61, start = L61
 │   │               │       ├─ [3] LineNumberTableEntry lineNumber = 62, start = L62
 │   │               │       ├─ [4] LineNumberTableEntry lineNumber = 63, start = L63
 │   │               │       └─ [5] LineNumberTableEntry lineNumber = 65, start = L65
 │   │               ├─ [1] LocalVariableTableAttribute
 │   │               │   └─ entrys: 2 entries
 │   │               │       ├─ [0] LocalVariableTableEntry index = 0, start = L57, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class9WithCode
 │   │               │       └─ [1] LocalVariableTableEntry index = 1, start = L60, end = @end, name = x, descriptor = double
 │   │               └─ [2] StackMapTableAttribute
 │   │                   └─ frames: 3 entries
 │   │                       ├─ [0] AppendFrame target = L60
 │   │                       │   └─ localVerificationTypes: 1 entries
 │   │                       │       └─ [0] Double
 │   │                       ├─ [1] SameFrame target = L62
 │   │                       └─ [2] SameFrame target = L65
 │   ├─ [6] ByteCodeMethod accessFlags = [private], name = "parseTerm", descriptor = double()
 │   │   └─ attributes: 1 entries
 │   │       └─ [0] CodeAttribute maxStack = 4, maxLocals = 3
 │   │           ├─ instructions: 25 entries
 │   │           │   ├─ [0] L71: // double x = parseFactor();
 │   │           │   ├─ [1]      ALOAD_0
 │   │           │   ├─ [2]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parseFactor, descriptor = double()
 │   │           │   ├─ [3]      DSTORE_1
 │   │           │   ├─ [4] L74: // if( eat( '*' ) )
 │   │           │   ├─ [5]      ALOAD_0
 │   │           │   ├─ [6]      BIPUSH 42
 │   │           │   ├─ [7]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = eat, descriptor = boolean( int )
 │   │           │   ├─ [8]      IFEQ L76
 │   │           │   ├─ [9] L75: // x *= parseFactor(); // multiplication
 │   │           │   ├─ [10]      DLOAD_1
 │   │           │   ├─ [11]      ALOAD_0
 │   │           │   ├─ [12]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parseFactor, descriptor = double()
 │   │           │   ├─ [13]      DMUL
 │   │           │   ├─ [14]      DSTORE_1
 │   │           │   ├─ [15]      GOTO L74
 │   │           │   ├─ [16] L76: // else if( eat( '/' ) )
 │   │           │   ├─ [17]      ALOAD_0
 │   │           │   ├─ [18]      BIPUSH 47
 │   │           │   ├─ [19]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = eat, descriptor = boolean( int )
 │   │           │   ├─ [20]      IFEQ L79
 │   │           │   ├─ [21] L77: // x /= parseFactor(); // division
 │   │           │   ├─ [22]      DLOAD_1
 │   │           │   ├─ [23]      ALOAD_0
 │   │           │   ├─ [24]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parseFactor, descriptor = double()
 │   │           │   ├─ [25]      DDIV
 │   │           │   ├─ [26]      DSTORE_1
 │   │           │   ├─ [27]      GOTO L74
 │   │           │   ├─ [28] L79: // return x;
 │   │           │   ├─ [29]      DLOAD_1
 │   │           │   └─ [30]      DRETURN
 │   │           ├─ exceptionInfos: 0 entries
 │   │           └─ attributes: 3 entries
 │   │               ├─ [0] LineNumberTableAttribute
 │   │               │   └─ entrys: 6 entries
 │   │               │       ├─ [0] LineNumberTableEntry lineNumber = 71, start = L71
 │   │               │       ├─ [1] LineNumberTableEntry lineNumber = 74, start = L74
 │   │               │       ├─ [2] LineNumberTableEntry lineNumber = 75, start = L75
 │   │               │       ├─ [3] LineNumberTableEntry lineNumber = 76, start = L76
 │   │               │       ├─ [4] LineNumberTableEntry lineNumber = 77, start = L77
 │   │               │       └─ [5] LineNumberTableEntry lineNumber = 79, start = L79
 │   │               ├─ [1] LocalVariableTableAttribute
 │   │               │   └─ entrys: 2 entries
 │   │               │       ├─ [0] LocalVariableTableEntry index = 0, start = L71, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class9WithCode
 │   │               │       └─ [1] LocalVariableTableEntry index = 1, start = L74, end = @end, name = x, descriptor = double
 │   │               └─ [2] StackMapTableAttribute
 │   │                   └─ frames: 3 entries
 │   │                       ├─ [0] AppendFrame target = L74
 │   │                       │   └─ localVerificationTypes: 1 entries
 │   │                       │       └─ [0] Double
 │   │                       ├─ [1] SameFrame target = L76
 │   │                       └─ [2] SameFrame target = L79
 │   └─ [7] ByteCodeMethod accessFlags = [private], name = "parseFactor", descriptor = double()
 │       └─ attributes: 1 entries
 │           └─ [0] CodeAttribute maxStack = 4, maxLocals = 7
 │               ├─ instructions: 190 entries
 │               │   ├─ [0] L85: // if( eat( '+' ) )
 │               │   ├─ [1]      ALOAD_0
 │               │   ├─ [2]      BIPUSH 43
 │               │   ├─ [3]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = eat, descriptor = boolean( int )
 │               │   ├─ [4]      IFEQ L87
 │               │   ├─ [5] L86: // return parseFactor(); // unary plus
 │               │   ├─ [6]      ALOAD_0
 │               │   ├─ [7]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parseFactor, descriptor = double()
 │               │   ├─ [8]      DRETURN
 │               │   ├─ [9] L87: // if( eat( '-' ) )
 │               │   ├─ [10]      ALOAD_0
 │               │   ├─ [11]      BIPUSH 45
 │               │   ├─ [12]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = eat, descriptor = boolean( int )
 │               │   ├─ [13]      IFEQ L91
 │               │   ├─ [14] L88: // return -parseFactor(); // unary minus
 │               │   ├─ [15]      ALOAD_0
 │               │   ├─ [16]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parseFactor, descriptor = double()
 │               │   ├─ [17]      DNEG
 │               │   ├─ [18]      DRETURN
 │               │   ├─ [19] L91: // int startPos = pos;
 │               │   ├─ [20]      ALOAD_0
 │               │   ├─ [21]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.pos
 │               │   ├─ [22]      ISTORE_3
 │               │   ├─ [23] L92: // if( eat( '(' ) )
 │               │   ├─ [24]      ALOAD_0
 │               │   ├─ [25]      BIPUSH 40
 │               │   ├─ [26]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = eat, descriptor = boolean( int )
 │               │   ├─ [27]      IFEQ L98
 │               │   ├─ [28] L95: // x = parseExpression();
 │               │   ├─ [29]      ALOAD_0
 │               │   ├─ [30]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parseExpression, descriptor = double()
 │               │   ├─ [31]      DSTORE_1
 │               │   ├─ [32] L96: // eat( ')' );
 │               │   ├─ [33]      ALOAD_0
 │               │   ├─ [34]      BIPUSH 41
 │               │   ├─ [35]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = eat, descriptor = boolean( int )
 │               │   ├─ [36]      POP
 │               │   ├─ [37]      GOTO L128
 │               │   ├─ [38] L98: // else if( (ch >= '0' && ch <= '9') || ch == '.' )
 │               │   ├─ [39]      ALOAD_0
 │               │   ├─ [40]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │               │   ├─ [41]      BIPUSH 48
 │               │   ├─ [42]      IF_ICMPLT T1
 │               │   ├─ [43]      ALOAD_0
 │               │   ├─ [44]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │               │   ├─ [45]      BIPUSH 57
 │               │   ├─ [46]      IF_ICMPLE L101
 │               │   ├─ [47] T1:
 │               │   ├─ [48]      ALOAD_0
 │               │   ├─ [49]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │               │   ├─ [50]      BIPUSH 46
 │               │   ├─ [51]      IF_ICMPNE L105
 │               │   ├─ [52] L101: // while( (ch >= '0' && ch <= '9') || ch == '.' )
 │               │   ├─ [53]      ALOAD_0
 │               │   ├─ [54]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │               │   ├─ [55]      BIPUSH 48
 │               │   ├─ [56]      IF_ICMPLT T2
 │               │   ├─ [57]      ALOAD_0
 │               │   ├─ [58]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │               │   ├─ [59]      BIPUSH 57
 │               │   ├─ [60]      IF_ICMPLE L102
 │               │   ├─ [61] T2:
 │               │   ├─ [62]      ALOAD_0
 │               │   ├─ [63]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │               │   ├─ [64]      BIPUSH 46
 │               │   ├─ [65]      IF_ICMPNE L103
 │               │   ├─ [66] L102: // nextChar();
 │               │   ├─ [67]      ALOAD_0
 │               │   ├─ [68]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = nextChar, descriptor = void()
 │               │   ├─ [69]      GOTO L101
 │               │   ├─ [70] L103: // x = Double.parseDouble( str.substring( startPos, pos ) );
 │               │   ├─ [71]      ALOAD_0
 │               │   ├─ [72]      GETFIELD java.lang.String mikenakis.bytecode.test.model.Class9WithCode.str
 │               │   ├─ [73]      ILOAD_3
 │               │   ├─ [74]      ALOAD_0
 │               │   ├─ [75]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.pos
 │               │   ├─ [76]      INVOKEVIRTUAL type = java.lang.String, name = substring, descriptor = java.lang.String( int, int )
 │               │   ├─ [77]      INVOKESTATIC type = java.lang.Double, name = parseDouble, descriptor = double( java.lang.String )
 │               │   ├─ [78]      DSTORE_1
 │               │   ├─ [79] T3:
 │               │   ├─ [80]      GOTO L128
 │               │   ├─ [81] L105: // else if( ch >= 'a' && ch <= 'z' )
 │               │   ├─ [82]      ALOAD_0
 │               │   ├─ [83]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │               │   ├─ [84]      BIPUSH 97
 │               │   ├─ [85]      IF_ICMPLT L125
 │               │   ├─ [86]      ALOAD_0
 │               │   ├─ [87]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │               │   ├─ [88]      BIPUSH 122
 │               │   ├─ [89]      IF_ICMPGT L125
 │               │   ├─ [90] L108: // while( ch >= 'a' && ch <= 'z' )
 │               │   ├─ [91]      ALOAD_0
 │               │   ├─ [92]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │               │   ├─ [93]      BIPUSH 97
 │               │   ├─ [94]      IF_ICMPLT L110
 │               │   ├─ [95]      ALOAD_0
 │               │   ├─ [96]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │               │   ├─ [97]      BIPUSH 122
 │               │   ├─ [98]      IF_ICMPGT L110
 │               │   ├─ [99] L109: // nextChar();
 │               │   ├─ [100]      ALOAD_0
 │               │   ├─ [101]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = nextChar, descriptor = void()
 │               │   ├─ [102]      GOTO L108
 │               │   ├─ [103] L110: // String func = str.substring( startPos, pos );
 │               │   ├─ [104]      ALOAD_0
 │               │   ├─ [105]      GETFIELD java.lang.String mikenakis.bytecode.test.model.Class9WithCode.str
 │               │   ├─ [106]      ILOAD_3
 │               │   ├─ [107]      ALOAD_0
 │               │   ├─ [108]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.pos
 │               │   ├─ [109]      INVOKEVIRTUAL type = java.lang.String, name = substring, descriptor = java.lang.String( int, int )
 │               │   ├─ [110]      ASTORE 4
 │               │   ├─ [111] L111: // x = parseFactor();
 │               │   ├─ [112]      ALOAD_0
 │               │   ├─ [113]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parseFactor, descriptor = double()
 │               │   ├─ [114]      DSTORE_1
 │               │   ├─ [115] L112: // x = switch( func )
 │               │   ├─ [116]      ALOAD 4
 │               │   ├─ [117]      ASTORE 5
 │               │   ├─ [118]      ICONST_M1
 │               │   ├─ [119]      ISTORE 6
 │               │   ├─ [120]      ALOAD 5
 │               │   ├─ [121]      INVOKEVIRTUAL type = java.lang.String, name = hashCode, descriptor = int()
 │               │   ├─ [122]      LOOKUPSWITCH default: T10 value-offset-pairs: [98695:T6, 99334:T9, 112661:T8, 113880:T5, 114593:T7, 3538208:T4]
 │               │   ├─ [123] T4:
 │               │   ├─ [124]      ALOAD 5
 │               │   ├─ [125]      LDCx StringConstant( Mutf8Constant( "sqrt" ) )
 │               │   ├─ [126]      INVOKEVIRTUAL type = java.lang.String, name = equals, descriptor = boolean( java.lang.Object )
 │               │   ├─ [127]      IFEQ T10
 │               │   ├─ [128]      ICONST_0
 │               │   ├─ [129]      ISTORE 6
 │               │   ├─ [130]      GOTO T10
 │               │   ├─ [131] T5:
 │               │   ├─ [132]      ALOAD 5
 │               │   ├─ [133]      LDCx StringConstant( Mutf8Constant( "sin" ) )
 │               │   ├─ [134]      INVOKEVIRTUAL type = java.lang.String, name = equals, descriptor = boolean( java.lang.Object )
 │               │   ├─ [135]      IFEQ T10
 │               │   ├─ [136]      ICONST_1
 │               │   ├─ [137]      ISTORE 6
 │               │   ├─ [138]      GOTO T10
 │               │   ├─ [139] T6:
 │               │   ├─ [140]      ALOAD 5
 │               │   ├─ [141]      LDCx StringConstant( Mutf8Constant( "cos" ) )
 │               │   ├─ [142]      INVOKEVIRTUAL type = java.lang.String, name = equals, descriptor = boolean( java.lang.Object )
 │               │   ├─ [143]      IFEQ T10
 │               │   ├─ [144]      ICONST_2
 │               │   ├─ [145]      ISTORE 6
 │               │   ├─ [146]      GOTO T10
 │               │   ├─ [147] T7:
 │               │   ├─ [148]      ALOAD 5
 │               │   ├─ [149]      LDCx StringConstant( Mutf8Constant( "tan" ) )
 │               │   ├─ [150]      INVOKEVIRTUAL type = java.lang.String, name = equals, descriptor = boolean( java.lang.Object )
 │               │   ├─ [151]      IFEQ T10
 │               │   ├─ [152]      ICONST_3
 │               │   ├─ [153]      ISTORE 6
 │               │   ├─ [154]      GOTO T10
 │               │   ├─ [155] T8:
 │               │   ├─ [156]      ALOAD 5
 │               │   ├─ [157]      LDCx StringConstant( Mutf8Constant( "rad" ) )
 │               │   ├─ [158]      INVOKEVIRTUAL type = java.lang.String, name = equals, descriptor = boolean( java.lang.Object )
 │               │   ├─ [159]      IFEQ T10
 │               │   ├─ [160]      ICONST_4
 │               │   ├─ [161]      ISTORE 6
 │               │   ├─ [162]      GOTO T10
 │               │   ├─ [163] T9:
 │               │   ├─ [164]      ALOAD 5
 │               │   ├─ [165]      LDCx StringConstant( Mutf8Constant( "deg" ) )
 │               │   ├─ [166]      INVOKEVIRTUAL type = java.lang.String, name = equals, descriptor = boolean( java.lang.Object )
 │               │   ├─ [167]      IFEQ T10
 │               │   ├─ [168]      ICONST_5
 │               │   ├─ [169]      ISTORE 6
 │               │   ├─ [170] T10:
 │               │   ├─ [171]      ILOAD 6
 │               │   ├─ [172]      TABLESWITCH default: L120 range: 0 - 5 offsets: [L114, L115, L116, L117, L118, L119]
 │               │   ├─ [173] L114: // case "sqrt" -> Math.sqrt( x );
 │               │   ├─ [174]      DLOAD_1
 │               │   ├─ [175]      INVOKESTATIC type = java.lang.Math, name = sqrt, descriptor = double( double )
 │               │   ├─ [176]      GOTO T11
 │               │   ├─ [177] L115: // case "sin" -> Math.sin( x );
 │               │   ├─ [178]      DLOAD_1
 │               │   ├─ [179]      INVOKESTATIC type = java.lang.Math, name = sin, descriptor = double( double )
 │               │   ├─ [180]      GOTO T11
 │               │   ├─ [181] L116: // case "cos" -> Math.cos( x );
 │               │   ├─ [182]      DLOAD_1
 │               │   ├─ [183]      INVOKESTATIC type = java.lang.Math, name = cos, descriptor = double( double )
 │               │   ├─ [184]      GOTO T11
 │               │   ├─ [185] L117: // case "tan" -> Math.tan( x );
 │               │   ├─ [186]      DLOAD_1
 │               │   ├─ [187]      INVOKESTATIC type = java.lang.Math, name = tan, descriptor = double( double )
 │               │   ├─ [188]      GOTO T11
 │               │   ├─ [189] L118: // case "rad" -> Math.toRadians( x );
 │               │   ├─ [190]      DLOAD_1
 │               │   ├─ [191]      INVOKESTATIC type = java.lang.Math, name = toRadians, descriptor = double( double )
 │               │   ├─ [192]      GOTO T11
 │               │   ├─ [193] L119: // case "deg" -> Math.toDegrees( x );
 │               │   ├─ [194]      DLOAD_1
 │               │   ├─ [195]      INVOKESTATIC type = java.lang.Math, name = toDegrees, descriptor = double( double )
 │               │   ├─ [196]      GOTO T11
 │               │   ├─ [197] L120: // default -> throw new RuntimeException( "Unknown function: " + func );
 │               │   ├─ [198]      NEW java.lang.RuntimeException
 │               │   ├─ [199]      DUP
 │               │   ├─ [200]      ALOAD 4
 │               │   ├─ [201]      INVOKEDYNAMIC bootstrapMethodIndex = 1, name = makeConcatWithConstants, descriptor = java.lang.String( java.lang.String )
 │               │   ├─ [202]      INVOKESPECIAL type = java.lang.RuntimeException, name = <init>, descriptor = void( java.lang.String )
 │               │   ├─ [203]      ATHROW
 │               │   ├─ [204] T11:
 │               │   ├─ [205]      DSTORE_1
 │               │   ├─ [206] L122: // }
 │               │   ├─ [207]      GOTO L128
 │               │   ├─ [208] L125: // throw new RuntimeException( "Unexpected: " + (char)ch );
 │               │   ├─ [209]      NEW java.lang.RuntimeException
 │               │   ├─ [210]      DUP
 │               │   ├─ [211]      ALOAD_0
 │               │   ├─ [212]      GETFIELD int mikenakis.bytecode.test.model.Class9WithCode.ch
 │               │   ├─ [213]      I2C
 │               │   ├─ [214]      INVOKEDYNAMIC bootstrapMethodIndex = 0, name = makeConcatWithConstants, descriptor = java.lang.String( char )
 │               │   ├─ [215]      INVOKESPECIAL type = java.lang.RuntimeException, name = <init>, descriptor = void( java.lang.String )
 │               │   ├─ [216]      ATHROW
 │               │   ├─ [217] L128: // if( eat( '^' ) )
 │               │   ├─ [218]      ALOAD_0
 │               │   ├─ [219]      BIPUSH 94
 │               │   ├─ [220]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = eat, descriptor = boolean( int )
 │               │   ├─ [221]      IFEQ L131
 │               │   ├─ [222] L129: // x = Math.pow( x, parseFactor() ); // exponentiation
 │               │   ├─ [223]      DLOAD_1
 │               │   ├─ [224]      ALOAD_0
 │               │   ├─ [225]      INVOKEVIRTUAL type = mikenakis.bytecode.test.model.Class9WithCode, name = parseFactor, descriptor = double()
 │               │   ├─ [226]      INVOKESTATIC type = java.lang.Math, name = pow, descriptor = double( double, double )
 │               │   ├─ [227]      DSTORE_1
 │               │   ├─ [228] L131: // return x;
 │               │   ├─ [229]      DLOAD_1
 │               │   └─ [230]      DRETURN
 │               ├─ exceptionInfos: 0 entries
 │               └─ attributes: 3 entries
 │                   ├─ [0] LineNumberTableAttribute
 │                   │   └─ entrys: 30 entries
 │                   │       ├─ [0] LineNumberTableEntry lineNumber = 85, start = L85
 │                   │       ├─ [1] LineNumberTableEntry lineNumber = 86, start = L86
 │                   │       ├─ [2] LineNumberTableEntry lineNumber = 87, start = L87
 │                   │       ├─ [3] LineNumberTableEntry lineNumber = 88, start = L88
 │                   │       ├─ [4] LineNumberTableEntry lineNumber = 91, start = L91
 │                   │       ├─ [5] LineNumberTableEntry lineNumber = 92, start = L92
 │                   │       ├─ [6] LineNumberTableEntry lineNumber = 95, start = L95
 │                   │       ├─ [7] LineNumberTableEntry lineNumber = 96, start = L96
 │                   │       ├─ [8] LineNumberTableEntry lineNumber = 98, start = L98
 │                   │       ├─ [9] LineNumberTableEntry lineNumber = 101, start = L101
 │                   │       ├─ [10] LineNumberTableEntry lineNumber = 102, start = L102
 │                   │       ├─ [11] LineNumberTableEntry lineNumber = 103, start = L103
 │                   │       ├─ [12] LineNumberTableEntry lineNumber = 105, start = L105
 │                   │       ├─ [13] LineNumberTableEntry lineNumber = 108, start = L108
 │                   │       ├─ [14] LineNumberTableEntry lineNumber = 109, start = L109
 │                   │       ├─ [15] LineNumberTableEntry lineNumber = 110, start = L110
 │                   │       ├─ [16] LineNumberTableEntry lineNumber = 111, start = L111
 │                   │       ├─ [17] LineNumberTableEntry lineNumber = 112, start = L112
 │                   │       ├─ [18] LineNumberTableEntry lineNumber = 114, start = L114
 │                   │       ├─ [19] LineNumberTableEntry lineNumber = 115, start = L115
 │                   │       ├─ [20] LineNumberTableEntry lineNumber = 116, start = L116
 │                   │       ├─ [21] LineNumberTableEntry lineNumber = 117, start = L117
 │                   │       ├─ [22] LineNumberTableEntry lineNumber = 118, start = L118
 │                   │       ├─ [23] LineNumberTableEntry lineNumber = 119, start = L119
 │                   │       ├─ [24] LineNumberTableEntry lineNumber = 120, start = L120
 │                   │       ├─ [25] LineNumberTableEntry lineNumber = 122, start = L122
 │                   │       ├─ [26] LineNumberTableEntry lineNumber = 125, start = L125
 │                   │       ├─ [27] LineNumberTableEntry lineNumber = 128, start = L128
 │                   │       ├─ [28] LineNumberTableEntry lineNumber = 129, start = L129
 │                   │       └─ [29] LineNumberTableEntry lineNumber = 131, start = L131
 │                   ├─ [1] LocalVariableTableAttribute
 │                   │   └─ entrys: 7 entries
 │                   │       ├─ [0] LocalVariableTableEntry index = 1, start = L96, end = L98, name = x, descriptor = double
 │                   │       ├─ [1] LocalVariableTableEntry index = 1, start = T3, end = L105, name = x, descriptor = double
 │                   │       ├─ [2] LocalVariableTableEntry index = 4, start = L111, end = L122, name = func, descriptor = java.lang.String
 │                   │       ├─ [3] LocalVariableTableEntry index = 1, start = L112, end = L125, name = x, descriptor = double
 │                   │       ├─ [4] LocalVariableTableEntry index = 0, start = L85, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class9WithCode
 │                   │       ├─ [5] LocalVariableTableEntry index = 1, start = L128, end = @end, name = x, descriptor = double
 │                   │       └─ [6] LocalVariableTableEntry index = 3, start = L92, end = @end, name = startPos, descriptor = int
 │                   └─ [2] StackMapTableAttribute
 │                       └─ frames: 29 entries
 │                           ├─ [0] SameFrame target = L87
 │                           ├─ [1] SameFrame target = L91
 │                           ├─ [2] AppendFrame target = L98
 │                           │   └─ localVerificationTypes: 3 entries
 │                           │       ├─ [0] Top
 │                           │       ├─ [1] Top
 │                           │       └─ [2] Integer
 │                           ├─ [3] SameFrame target = T1
 │                           ├─ [4] SameFrame target = L101
 │                           ├─ [5] SameFrame target = T2
 │                           ├─ [6] SameFrame target = L102
 │                           ├─ [7] SameFrame target = L103
 │                           ├─ [8] SameFrame target = L105
 │                           ├─ [9] SameFrame target = L108
 │                           ├─ [10] SameFrame target = L110
 │                           ├─ [11] FullFrame target = T4
 │                           │   ├─ localVerificationTypes: 6 entries
 │                           │   │   ├─ [0] name = Object, type = mikenakis.bytecode.test.model.Class9WithCode
 │                           │   │   ├─ [1] Double
 │                           │   │   ├─ [2] Integer
 │                           │   │   ├─ [3] name = Object, type = java.lang.String
 │                           │   │   ├─ [4] name = Object, type = java.lang.String
 │                           │   │   └─ [5] Integer
 │                           │   └─ stackVerificationTypes: 0 entries
 │                           ├─ [12] SameFrame target = T5
 │                           ├─ [13] SameFrame target = T6
 │                           ├─ [14] SameFrame target = T7
 │                           ├─ [15] SameFrame target = T8
 │                           ├─ [16] SameFrame target = T9
 │                           ├─ [17] SameFrame target = T10
 │                           ├─ [18] SameFrame target = L114
 │                           ├─ [19] SameFrame target = L115
 │                           ├─ [20] SameFrame target = L116
 │                           ├─ [21] SameFrame target = L117
 │                           ├─ [22] SameFrame target = L118
 │                           ├─ [23] SameFrame target = L119
 │                           ├─ [24] SameFrame target = L120
 │                           ├─ [25] FullFrame target = T11
 │                           │   ├─ localVerificationTypes: 4 entries
 │                           │   │   ├─ [0] name = Object, type = mikenakis.bytecode.test.model.Class9WithCode
 │                           │   │   ├─ [1] Double
 │                           │   │   ├─ [2] Integer
 │                           │   │   └─ [3] name = Object, type = java.lang.String
 │                           │   └─ stackVerificationTypes: 1 entries
 │                           │       └─ [0] Double
 │                           ├─ [26] FullFrame target = L125
 │                           │   ├─ localVerificationTypes: 4 entries
 │                           │   │   ├─ [0] name = Object, type = mikenakis.bytecode.test.model.Class9WithCode
 │                           │   │   ├─ [1] Top
 │                           │   │   ├─ [2] Top
 │                           │   │   └─ [3] Integer
 │                           │   └─ stackVerificationTypes: 0 entries
 │                           ├─ [27] FullFrame target = L128
 │                           │   ├─ localVerificationTypes: 3 entries
 │                           │   │   ├─ [0] name = Object, type = mikenakis.bytecode.test.model.Class9WithCode
 │                           │   │   ├─ [1] Double
 │                           │   │   └─ [2] Integer
 │                           │   └─ stackVerificationTypes: 0 entries
 │                           └─ [28] SameFrame target = L131
 └─ attributes: 3 entries
     ├─ [0] SourceFileAttribute
     │   └─ value: Mutf8Constant( "Class9WithCode.java" )
     ├─ [1] BootstrapMethodsAttribute
     │   └─ bootstrapMethods: 2 entries
     │       ├─ [0] BootstrapMethod methodHandle = MethodHandleConstant referenceKind = InvokeStatic, referenceConstant = type = java.lang.invoke.StringConcatFactory, name = makeConcatWithConstants, descriptor = java.lang.invoke.CallSite( java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[] ) arguments: StringConstant( Mutf8Constant( "Unexpected: \x01" ) )
     │       └─ [1] BootstrapMethod methodHandle = MethodHandleConstant referenceKind = InvokeStatic, referenceConstant = type = java.lang.invoke.StringConcatFactory, name = makeConcatWithConstants, descriptor = java.lang.invoke.CallSite( java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[] ) arguments: StringConstant( Mutf8Constant( "Unknown function: \x01" ) )
     └─ [2] InnerClassesAttribute
         └─ innerClasses: 1 entries
             └─ [0] InnerClass outerClass = java.lang.invoke.MethodHandles, accessFlags = [public, static, final], innerClass=java.lang.invoke.MethodHandles$Lookup, innerName = Mutf8Constant( "Lookup" )
