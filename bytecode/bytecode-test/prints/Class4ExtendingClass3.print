ByteCodeType version = 60.0, accessFlags = [public, final, super], thisClass = mikenakis.bytecode.test.model.Class4ExtendingClass3, superClass = mikenakis.bytecode.test.model.Class3ImplementingInterface
 ├─ interfaces: 1 entries
 │   └─ [0] mikenakis.bytecode.test.model.Interface2
 ├─ extraConstants: 0 entries
 ├─ fields: 2 entries
 │   ├─ [0] ByteCodeField accessFlags = [private, final], name = "interface1", descriptor = mikenakis.bytecode.test.model.Interface1
 │   │   └─ attributes: 0 entries
 │   └─ [1] ByteCodeField accessFlags = [private, final], name = "nestedObject", descriptor = mikenakis.bytecode.test.model.Class4ExtendingClass3$NestedClass
 │       └─ attributes: 0 entries
 ├─ methods: 9 entries
 │   ├─ [0] ByteCodeMethod accessFlags = [public], name = "<init>", descriptor = void()
 │   │   └─ attributes: 1 entries
 │   │       └─ [0] CodeAttribute maxStack = 3, maxLocals = 1
 │   │           ├─ instructions: 11 entries
 │   │           │   ├─ [0] L20:    ALOAD_0 0 //{
 │   │           │   ├─ [1]         INVOKESPECIAL type = mikenakis.bytecode.test.model.Class3ImplementingInterface, name = <init>, descriptor = void()
 │   │           │   ├─ [2] L16:    ALOAD_0 0 //private final Interface1 interface1 = this;
 │   │           │   ├─ [3]         ALOAD_0 0
 │   │           │   ├─ [4]         PUTFIELD mikenakis.bytecode.test.model.Interface1 mikenakis.bytecode.test.model.Class4ExtendingClass3.interface1
 │   │           │   ├─ [5] L17:    ALOAD_0 0 //private final NestedClass nestedObject = new NestedClass();
 │   │           │   ├─ [6]         NEW mikenakis.bytecode.test.model.Class4ExtendingClass3$NestedClass
 │   │           │   ├─ [7]         DUP
 │   │           │   ├─ [8]         INVOKESPECIAL type = mikenakis.bytecode.test.model.Class4ExtendingClass3$NestedClass, name = <init>, descriptor = void()
 │   │           │   ├─ [9]         PUTFIELD mikenakis.bytecode.test.model.Class4ExtendingClass3$NestedClass mikenakis.bytecode.test.model.Class4ExtendingClass3.nestedObject
 │   │           │   └─ [10] L21:    RETURN //}
 │   │           ├─ exceptionInfos: 0 entries
 │   │           └─ attributes: 2 entries
 │   │               ├─ [0] LineNumberTableAttribute
 │   │               │   └─ entrys: 4 entries
 │   │               │       ├─ [0] LineNumberTableEntry lineNumber = 20, start = L20
 │   │               │       ├─ [1] LineNumberTableEntry lineNumber = 16, start = L16
 │   │               │       ├─ [2] LineNumberTableEntry lineNumber = 17, start = L17
 │   │               │       └─ [3] LineNumberTableEntry lineNumber = 21, start = L21
 │   │               └─ [1] LocalVariableTableAttribute
 │   │                   └─ entrys: 1 entries
 │   │                       └─ [0] LocalVariableTableEntry index = 0, start = L20, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class4ExtendingClass3
 │   ├─ [1] ByteCodeMethod accessFlags = [public], name = "getInterface1", descriptor = mikenakis.bytecode.test.model.Interface1()
 │   │   └─ attributes: 1 entries
 │   │       └─ [0] CodeAttribute maxStack = 1, maxLocals = 1
 │   │           ├─ instructions: 3 entries
 │   │           │   ├─ [0] L25:    ALOAD_0 0 //return interface1;
 │   │           │   ├─ [1]         GETFIELD mikenakis.bytecode.test.model.Interface1 mikenakis.bytecode.test.model.Class4ExtendingClass3.interface1
 │   │           │   └─ [2]         ARETURN
 │   │           ├─ exceptionInfos: 0 entries
 │   │           └─ attributes: 2 entries
 │   │               ├─ [0] LineNumberTableAttribute
 │   │               │   └─ entrys: 1 entries
 │   │               │       └─ [0] LineNumberTableEntry lineNumber = 25, start = L25
 │   │               └─ [1] LocalVariableTableAttribute
 │   │                   └─ entrys: 1 entries
 │   │                       └─ [0] LocalVariableTableEntry index = 0, start = L25, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class4ExtendingClass3
 │   ├─ [2] ByteCodeMethod accessFlags = [public], name = "getLong", descriptor = long( mikenakis.bytecode.test.model.Class3ImplementingInterface )
 │   │   └─ attributes: 2 entries
 │   │       ├─ [0] CodeAttribute maxStack = 2, maxLocals = 2
 │   │       │   ├─ instructions: 3 entries
 │   │       │   │   ├─ [0] L30:    INVOKESTATIC type = java.lang.Thread, name = currentThread, descriptor = java.lang.Thread() //return Thread.currentThread().getId();
 │   │       │   │   ├─ [1]         INVOKEVIRTUAL type = java.lang.Thread, name = getId, descriptor = long()
 │   │       │   │   └─ [2]         LRETURN
 │   │       │   ├─ exceptionInfos: 0 entries
 │   │       │   └─ attributes: 2 entries
 │   │       │       ├─ [0] LineNumberTableAttribute
 │   │       │       │   └─ entrys: 1 entries
 │   │       │       │       └─ [0] LineNumberTableEntry lineNumber = 30, start = L30
 │   │       │       └─ [1] LocalVariableTableAttribute
 │   │       │           └─ entrys: 2 entries
 │   │       │               ├─ [0] LocalVariableTableEntry index = 0, start = L30, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class4ExtendingClass3
 │   │       │               └─ [1] LocalVariableTableEntry index = 1, start = L30, end = @end, name = class3ImplementingInterface, descriptor = mikenakis.bytecode.test.model.Class3ImplementingInterface
 │   │       └─ [1] MethodParametersAttribute
 │   │           └─ parameters: 1 entries
 │   │               └─ [0] MethodParameter accessFlags = [], name = "class3ImplementingInterface"
 │   ├─ [3] ByteCodeMethod accessFlags = [public], name = "testMethodHandle", descriptor = void()
 │   │   └─ attributes: 1 entries
 │   │       └─ [0] CodeAttribute maxStack = 1, maxLocals = 2
 │   │           ├─ instructions: 5 entries
 │   │           │   ├─ [0] L35:    INVOKEDYNAMIC invokeDynamicConstant = bootstrapMethodIndex = 0, name = run, descriptor = java.lang.Runnable() //Runnable runnable = () -> new Class4ExtendingClass3();
 │   │           │   ├─ [1]         ASTORE_1 1
 │   │           │   ├─ [2] L36:    ALOAD_1 1 //runnable.run();
 │   │           │   ├─ [3]         INVOKEINTERFACE interfaceMethodReferenceConstant = type = java.lang.Runnable, name = run, descriptor = void(), 1 arguments
 │   │           │   └─ [4] L37:    RETURN //}
 │   │           ├─ exceptionInfos: 0 entries
 │   │           └─ attributes: 2 entries
 │   │               ├─ [0] LineNumberTableAttribute
 │   │               │   └─ entrys: 3 entries
 │   │               │       ├─ [0] LineNumberTableEntry lineNumber = 35, start = L35
 │   │               │       ├─ [1] LineNumberTableEntry lineNumber = 36, start = L36
 │   │               │       └─ [2] LineNumberTableEntry lineNumber = 37, start = L37
 │   │               └─ [1] LocalVariableTableAttribute
 │   │                   └─ entrys: 2 entries
 │   │                       ├─ [0] LocalVariableTableEntry index = 0, start = L35, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class4ExtendingClass3
 │   │                       └─ [1] LocalVariableTableEntry index = 1, start = L36, end = @end, name = runnable, descriptor = java.lang.Runnable
 │   ├─ [4] ByteCodeMethod accessFlags = [public], name = "testInvokeDynamic", descriptor = void()
 │   │   └─ attributes: 1 entries
 │   │       └─ [0] CodeAttribute maxStack = 2, maxLocals = 2
 │   │           ├─ instructions: 7 entries
 │   │           │   ├─ [0] L46:    INVOKEDYNAMIC invokeDynamicConstant = bootstrapMethodIndex = 1, name = x, descriptor = mikenakis.bytecode.test.model.Class4ExtendingClass3$Foo() //Foo foo = s -> s + "x";
 │   │           │   ├─ [1]         ASTORE_1 1
 │   │           │   ├─ [2] L47:    ALOAD_1 1 //foo.x( "aaa" );
 │   │           │   ├─ [3]         LDC constant = StringConstant( Mutf8Constant( "aaa" ) )
 │   │           │   ├─ [4]         INVOKEINTERFACE interfaceMethodReferenceConstant = type = mikenakis.bytecode.test.model.Class4ExtendingClass3$Foo, name = x, descriptor = java.lang.String( java.lang.String ), 2 arguments
 │   │           │   ├─ [5]         POP
 │   │           │   └─ [6] L48:    RETURN //}
 │   │           ├─ exceptionInfos: 0 entries
 │   │           └─ attributes: 2 entries
 │   │               ├─ [0] LineNumberTableAttribute
 │   │               │   └─ entrys: 3 entries
 │   │               │       ├─ [0] LineNumberTableEntry lineNumber = 46, start = L46
 │   │               │       ├─ [1] LineNumberTableEntry lineNumber = 47, start = L47
 │   │               │       └─ [2] LineNumberTableEntry lineNumber = 48, start = L48
 │   │               └─ [1] LocalVariableTableAttribute
 │   │                   └─ entrys: 2 entries
 │   │                       ├─ [0] LocalVariableTableEntry index = 0, start = L46, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class4ExtendingClass3
 │   │                       └─ [1] LocalVariableTableEntry index = 1, start = L47, end = @end, name = foo, descriptor = mikenakis.bytecode.test.model.Class4ExtendingClass3$Foo
 │   ├─ [5] ByteCodeMethod accessFlags = [public], name = "testSyntheticMethod1", descriptor = boolean()
 │   │   └─ attributes: 1 entries
 │   │       └─ [0] CodeAttribute maxStack = 1, maxLocals = 1
 │   │           ├─ instructions: 4 entries
 │   │           │   ├─ [0] L52:    ALOAD_0 0 //return nestedObject.foo;
 │   │           │   ├─ [1]         GETFIELD mikenakis.bytecode.test.model.Class4ExtendingClass3$NestedClass mikenakis.bytecode.test.model.Class4ExtendingClass3.nestedObject
 │   │           │   ├─ [2]         GETFIELD boolean mikenakis.bytecode.test.model.Class4ExtendingClass3$NestedClass.foo
 │   │           │   └─ [3]         IRETURN
 │   │           ├─ exceptionInfos: 0 entries
 │   │           └─ attributes: 2 entries
 │   │               ├─ [0] LineNumberTableAttribute
 │   │               │   └─ entrys: 1 entries
 │   │               │       └─ [0] LineNumberTableEntry lineNumber = 52, start = L52
 │   │               └─ [1] LocalVariableTableAttribute
 │   │                   └─ entrys: 1 entries
 │   │                       └─ [0] LocalVariableTableEntry index = 0, start = L52, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class4ExtendingClass3
 │   ├─ [6] ByteCodeMethod accessFlags = [public], name = "testSyntheticMethod2", descriptor = void( boolean )
 │   │   └─ attributes: 2 entries
 │   │       ├─ [0] CodeAttribute maxStack = 2, maxLocals = 2
 │   │       │   ├─ instructions: 5 entries
 │   │       │   │   ├─ [0] L57:    ALOAD_0 0 //nestedObject.foo = foo;
 │   │       │   │   ├─ [1]         GETFIELD mikenakis.bytecode.test.model.Class4ExtendingClass3$NestedClass mikenakis.bytecode.test.model.Class4ExtendingClass3.nestedObject
 │   │       │   │   ├─ [2]         ILOAD_1 1
 │   │       │   │   ├─ [3]         PUTFIELD boolean mikenakis.bytecode.test.model.Class4ExtendingClass3$NestedClass.foo
 │   │       │   │   └─ [4] L58:    RETURN //}
 │   │       │   ├─ exceptionInfos: 0 entries
 │   │       │   └─ attributes: 2 entries
 │   │       │       ├─ [0] LineNumberTableAttribute
 │   │       │       │   └─ entrys: 2 entries
 │   │       │       │       ├─ [0] LineNumberTableEntry lineNumber = 57, start = L57
 │   │       │       │       └─ [1] LineNumberTableEntry lineNumber = 58, start = L58
 │   │       │       └─ [1] LocalVariableTableAttribute
 │   │       │           └─ entrys: 2 entries
 │   │       │               ├─ [0] LocalVariableTableEntry index = 0, start = L57, end = @end, name = this, descriptor = mikenakis.bytecode.test.model.Class4ExtendingClass3
 │   │       │               └─ [1] LocalVariableTableEntry index = 1, start = L57, end = @end, name = foo, descriptor = boolean
 │   │       └─ [1] MethodParametersAttribute
 │   │           └─ parameters: 1 entries
 │   │               └─ [0] MethodParameter accessFlags = [], name = "foo"
 │   ├─ [7] ByteCodeMethod accessFlags = [private, static, synthetic], name = "lambda$testInvokeDynamic$1", descriptor = java.lang.String( java.lang.String )
 │   │   └─ attributes: 1 entries
 │   │       └─ [0] CodeAttribute maxStack = 1, maxLocals = 1
 │   │           ├─ instructions: 3 entries
 │   │           │   ├─ [0] L46:    ALOAD_0 0 //Foo foo = s -> s + "x";
 │   │           │   ├─ [1]         INVOKEDYNAMIC invokeDynamicConstant = bootstrapMethodIndex = 2, name = makeConcatWithConstants, descriptor = java.lang.String( java.lang.String )
 │   │           │   └─ [2]         ARETURN
 │   │           ├─ exceptionInfos: 0 entries
 │   │           └─ attributes: 2 entries
 │   │               ├─ [0] LineNumberTableAttribute
 │   │               │   └─ entrys: 1 entries
 │   │               │       └─ [0] LineNumberTableEntry lineNumber = 46, start = L46
 │   │               └─ [1] LocalVariableTableAttribute
 │   │                   └─ entrys: 1 entries
 │   │                       └─ [0] LocalVariableTableEntry index = 0, start = L46, end = @end, name = s, descriptor = java.lang.String
 │   └─ [8] ByteCodeMethod accessFlags = [private, static, synthetic], name = "lambda$testMethodHandle$0", descriptor = void()
 │       └─ attributes: 1 entries
 │           └─ [0] CodeAttribute maxStack = 2, maxLocals = 0
 │               ├─ instructions: 5 entries
 │               │   ├─ [0] L35:    NEW mikenakis.bytecode.test.model.Class4ExtendingClass3 //Runnable runnable = () -> new Class4ExtendingClass3();
 │               │   ├─ [1]         DUP
 │               │   ├─ [2]         INVOKESPECIAL type = mikenakis.bytecode.test.model.Class4ExtendingClass3, name = <init>, descriptor = void()
 │               │   ├─ [3]         POP
 │               │   └─ [4]         RETURN
 │               ├─ exceptionInfos: 0 entries
 │               └─ attributes: 1 entries
 │                   └─ [0] LineNumberTableAttribute
 │                       └─ entrys: 1 entries
 │                           └─ [0] LineNumberTableEntry lineNumber = 35, start = L35
 └─ attributes: 4 entries
     ├─ [0] SourceFileAttribute
     │   └─ value: Mutf8Constant( "Class4ExtendingClass3.java" )
     ├─ [1] NestMembersAttribute
     │   └─ members: 2 entries
     │       ├─ [0] ClassConstant mikenakis.bytecode.test.model.Class4ExtendingClass3$Foo
     │       └─ [1] ClassConstant mikenakis.bytecode.test.model.Class4ExtendingClass3$NestedClass
     ├─ [2] BootstrapMethodsAttribute
     │   └─ bootstrapMethods: 3 entries
     │       ├─ [0] BootstrapMethod methodHandle = MethodHandleConstant referenceKind = InvokeStatic, referenceConstant = type = java.lang.invoke.LambdaMetafactory, name = metafactory, descriptor = java.lang.invoke.CallSite( java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.invoke.MethodType, java.lang.invoke.MethodHandle, java.lang.invoke.MethodType ) arguments: MethodTypeConstant Mutf8Constant( "()V" ), MethodHandleConstant referenceKind = InvokeStatic, referenceConstant = type = mikenakis.bytecode.test.model.Class4ExtendingClass3, name = lambda$testMethodHandle$0, descriptor = void(), MethodTypeConstant Mutf8Constant( "()V" )
     │       ├─ [1] BootstrapMethod methodHandle = MethodHandleConstant referenceKind = InvokeStatic, referenceConstant = type = java.lang.invoke.LambdaMetafactory, name = metafactory, descriptor = java.lang.invoke.CallSite( java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.invoke.MethodType, java.lang.invoke.MethodHandle, java.lang.invoke.MethodType ) arguments: MethodTypeConstant Mutf8Constant( "(Ljava/lang/String;)Ljava/lang/String;" ), MethodHandleConstant referenceKind = InvokeStatic, referenceConstant = type = mikenakis.bytecode.test.model.Class4ExtendingClass3, name = lambda$testInvokeDynamic$1, descriptor = java.lang.String( java.lang.String ), MethodTypeConstant Mutf8Constant( "(Ljava/lang/String;)Ljava/lang/String;" )
     │       └─ [2] BootstrapMethod methodHandle = MethodHandleConstant referenceKind = InvokeStatic, referenceConstant = type = java.lang.invoke.StringConcatFactory, name = makeConcatWithConstants, descriptor = java.lang.invoke.CallSite( java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[] ) arguments: StringConstant( Mutf8Constant( "\x01x" ) )
     └─ [3] InnerClassesAttribute
         └─ innerClasses: 3 entries
             ├─ [0] InnerClass outerClass = mikenakis.bytecode.test.model.Class4ExtendingClass3, accessFlags = [private, static, final], innerClass=mikenakis.bytecode.test.model.Class4ExtendingClass3$NestedClass, innerName = Mutf8Constant( "NestedClass" )
             ├─ [1] InnerClass outerClass = mikenakis.bytecode.test.model.Class4ExtendingClass3, accessFlags = [static, interface, abstract], innerClass=mikenakis.bytecode.test.model.Class4ExtendingClass3$Foo, innerName = Mutf8Constant( "Foo" )
             └─ [2] InnerClass outerClass = java.lang.invoke.MethodHandles, accessFlags = [public, static, final], innerClass=java.lang.invoke.MethodHandles$Lookup, innerName = Mutf8Constant( "Lookup" )
